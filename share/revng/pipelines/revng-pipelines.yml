#
# This file is distributed under the MIT License. See LICENSE.md for details.
#

Component: revng
Containers:
  - Name: hex.dump
    Type: HexDump
  - Name: cross-relations.yml
    Type: BinaryCrossRelations
    Role: CrossRelations
  - Name: module.ll
    Type: LLVMContainer
  - Name: input
    Type: Binary
  - Name: object.o
    Type: Object
  - Name: output
    Type: Translated
  - Name: assembly-internal.yml.tar.gz
    Type: FunctionAssemblyInternal
  - Name: assembly.ptml.tar.gz
    Type: FunctionAssemblyPTML
  - Name: call-graph.svg.yml
    Type: CallGraphSVG
  - Name: call-graph-slice.svg.tar.gz
    Type: CallGraphSliceSVG
  - Name: cfg.svg.tar.gz
    Type: FunctionControlFlowGraphSVG
Branches:
  - Steps:
      - Name: initial
        Analyses:
          - Name: apply-diff
            Type: ApplyDiff
            UsedContainers: []
          - Name: verify-diff
            Type: VerifyDiff
            UsedContainers: []
          - Name: set-global
            Type: SetGlobal
            UsedContainers: []
          - Name: verify-global
            Type: VerifyGlobal
            UsedContainers: []
          - Name: add-primitive-types
            Type: AddPrimitiveTypes
            UsedContainers: []
          - Name: import-binary
            Type: ImportBinary
            UsedContainers: [input]
          - Name: import-well-known-models
            Type: ImportWellKnownModels
            UsedContainers: []
      - Name: lift
        Pipes:
          - Type: Lift
            UsedContainers: [input, module.ll]
          - Type: LLVMPipe
            UsedContainers: [module.ll]
            Passes: [globaldce]
        Artifacts:
          Container: module.ll
          Kind: Root
          SingleTargetFilename: module_lifted.ll
        Analyses:
          - Name: detect-abi
            Type: DetectABI
            UsedContainers: [module.ll]
      - Name: isolate
        Pipes:
          - Type: LLVMPipe
            UsedContainers: [module.ll]
            Passes: [isolate, invoke-isolated-functions, attach-debug-info]
          - Type: ProcessCallGraph
            UsedContainers: [module.ll, cross-relations.yml]
        Artifacts:
          Container: module.ll
          Kind: Isolated
          SingleTargetFilename: module_isolated.ll
      - Name: enforce-abi
        Pipes:
          - Type: LLVMPipe
            UsedContainers: [module.ll]
            Passes:
              - drop-root
              - enforce-abi
              - strip-debug-info-from-helpers
              # Note: we're running promote-csvs twice: it is important to run
              #       it before inline-helpers so that mem2reg can constant
              #       propagate helper arguments that are constant. This enables
              #       us to inline less code, in particular for helpers such as
              #       `cc_compute_c` and `cc_compute_all`.
              - promote-csvs
              - mem2reg
              - inline-helpers
              - attach-debug-info
              - promote-csvs
              - remove-exceptional-functions

        Artifacts:
          Container: module.ll
          Kind: CSVsPromoted
          SingleTargetFilename: module_abienforced.ll
  - From: isolate
    Steps:
      - Name: hexdump
        Pipes:
          - Type: HexDump
            UsedContainers: [input, module.ll, hex.dump]
        Artifacts:
          Container: hex.dump
          Kind: HexDump
          SingleTargetFilename: hex_dump.hex
  - From: isolate
    Steps:
      - Name: render-svg-call-graph
        Pipes:
          - Type: YieldCallGraph
            UsedContainers: [cross-relations.yml, call-graph.svg.yml]
        Artifacts:
          Container: call-graph.svg.yml
          Kind: CallGraphSVG
          SingleTargetFilename: call-graph.svg
  - From: isolate
    Steps:
      - Name: render-svg-call-graph-slice
        Pipes:
          - Type: YieldCallGraphSlice
            UsedContainers: [module.ll, cross-relations.yml, call-graph-slice.svg.tar.gz]
        Artifacts:
          Container: call-graph-slice.svg.tar.gz
          Kind: CallGraphSliceSVG
          SingleTargetFilename: call-graph-slice.svg
  - From: isolate
    Steps:
      - Name: process-assembly
        Pipes:
          - Type: ProcessAssembly
            UsedContainers: [input, module.ll, assembly-internal.yml.tar.gz]
      - Name: disassemble
        Pipes:
          - Type: YieldAssembly
            UsedContainers: [assembly-internal.yml.tar.gz, assembly.ptml.tar.gz]
        Artifacts:
          Container: assembly.ptml.tar.gz
          Kind: FunctionAssemblyPTML
          SingleTargetFilename: disassembly.S
  - From: process-assembly
    Steps:
      - Name: render-svg-cfg
        Pipes:
          - Type: YieldCFG
            UsedContainers: [assembly-internal.yml.tar.gz, cfg.svg.tar.gz]
        Artifacts:
          Container: cfg.svg.tar.gz
          Kind: FunctionControlFlowGraphSVG
          SingleTargetFilename: cfg.svg
  - From: lift
    Steps:
      - Name: recompile
        Pipes:
          - Type: LinkSupport
            UsedContainers: [module.ll]
          - Type: LLVMPipe
            UsedContainers: [module.ll]
            Passes: [O2]
            EnabledWhen: [O2]
          - Type: Compile
            UsedContainers: [module.ll, object.o]
          - Type: LinkForTranslation
            UsedContainers: [input, object.o, output]
        Artifacts:
          Container: output
          Kind: Translated
          SingleTargetFilename: translated_binary
  - From: isolate
    Steps:
      - Name: recompile-isolated
        Pipes:
          - Type: LinkSupport
            UsedContainers: [module.ll]
          - Type: LLVMPipe
            UsedContainers: [module.ll]
            Passes: [O2]
            EnabledWhen: [O2]
          - Type: CompileIsolated
            UsedContainers: [module.ll, object.o]
          - Type: LinkForTranslation
            UsedContainers: [input, object.o, output]
        Artifacts:
          Container: output
          Kind: Translated
          SingleTargetFilename: isolated_translated_binary
AnalysesLists:
  - Name: revng-initial-auto-analysis
    Analyses:
      - add-primitive-types
      - import-binary
      - import-well-known-models
      - detect-abi
